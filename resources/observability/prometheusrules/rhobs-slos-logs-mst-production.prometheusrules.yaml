---
$schema: /openshift/prometheus-rule-1.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    prometheus: app-sre
    role: alert-rules
  name: rhobs-slos-logs-mst-production
spec:
  groups:
  - interval: 2m30s
    name: api-logs-write-availability-slo-increase
    rules:
    - expr: sum by(code) (increase(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[4w]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:increase4w
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /push handler is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushAvailabilityErrorBudgetBurning
      expr: absent(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"})
        == 1
      for: 2m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        severity: critical
        slo: api-logs-write-availability-slo
  - interval: 30s
    name: api-logs-write-availability-slo
    rules:
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[5m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[5m]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate5m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[30m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[30m]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate30m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1h]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate1h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[2h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[2h]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate2h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[6h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[6h]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate6h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1d]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate1d
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[4d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[4d]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-availability-slo
      record: http_requests:burnrate4d
    - alert: APILogsPushAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /push handler is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate5m{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (14 * (1-0.95)) and http_requests:burnrate1h{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (14 * (1-0.95))
      for: 2m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 1h
        severity: critical
        short: 5m
        slo: api-logs-write-availability-slo
    - alert: APILogsPushAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /push handler is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate30m{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (7 * (1-0.95)) and http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (7 * (1-0.95))
      for: 15m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 6h
        severity: critical
        short: 30m
        slo: api-logs-write-availability-slo
    - alert: APILogsPushAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /push handler is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate2h{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (2 * (1-0.95)) and http_requests:burnrate1d{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (2 * (1-0.95))
      for: 1h
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 1d
        severity: warning
        short: 2h
        slo: api-logs-write-availability-slo
    - alert: APILogsPushAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /push handler is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (1 * (1-0.95)) and http_requests:burnrate4d{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-availability-slo"}
        > (1 * (1-0.95))
      for: 3h
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 4d
        severity: warning
        short: 6h
        slo: api-logs-write-availability-slo
  - interval: 30s
    name: api-logs-write-availability-slo-generic
    rules:
    - expr: "0.95"
      labels:
        slo: api-logs-write-availability-slo
      record: pyrra_objective
    - expr: 2419200
      labels:
        slo: api-logs-write-availability-slo
      record: pyrra_window
    - expr: 1 - sum(http_requests:increase4w{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}
        or vector(0)) / sum(http_requests:increase4w{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-write-availability-slo
      record: pyrra_availability
    - expr: sum(http_requests_total{code!~"^4..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-write-availability-slo
      record: pyrra_requests_total
    - expr: sum(http_requests_total{code=~"^5..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}
        or vector(0))
      labels:
        slo: api-logs-write-availability-slo
      record: pyrra_errors_total
  - interval: 2m30s
    name: api-logs-query-availability-slo-increase
    rules:
    - expr: sum by(code, handler) (increase(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[4w]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:increase4w
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query, /labels, or /label_values handler is burning too
          much error budget to guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryAvailabilityErrorBudgetBurning
      expr: absent(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"})
        == 1
      for: 2m
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        severity: critical
        slo: api-logs-query-availability-slo
  - interval: 30s
    name: api-logs-query-availability-slo
    rules:
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[5m]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[5m]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate5m
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[30m]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[30m]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate30m
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[1h]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[1h]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate1h
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[2h]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[2h]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate2h
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[6h]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[6h]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate6h
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[1d]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[1d]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate1d
    - expr: sum by(code, handler) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[4d]))
        / sum by(code, handler) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}[4d]))
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-availability-slo
      record: http_requests:burnrate4d
    - alert: APILogsQueryAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query, /labels, or /label_values handler is burning too
          much error budget to guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate5m{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (14 * (1-0.95)) and http_requests:burnrate1h{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (14 * (1-0.95))
      for: 2m
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        long: 1h
        severity: critical
        short: 5m
        slo: api-logs-query-availability-slo
    - alert: APILogsQueryAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query, /labels, or /label_values handler is burning too
          much error budget to guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate30m{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (7 * (1-0.95)) and http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (7 * (1-0.95))
      for: 15m
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        long: 6h
        severity: critical
        short: 30m
        slo: api-logs-query-availability-slo
    - alert: APILogsQueryAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query, /labels, or /label_values handler is burning too
          much error budget to guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate2h{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (2 * (1-0.95)) and http_requests:burnrate1d{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (2 * (1-0.95))
      for: 1h
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        long: 1d
        severity: warning
        short: 2h
        slo: api-logs-query-availability-slo
    - alert: APILogsQueryAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query, /labels, or /label_values handler is burning too
          much error budget to guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (1 * (1-0.95)) and http_requests:burnrate4d{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api",slo="api-logs-query-availability-slo"}
        > (1 * (1-0.95))
      for: 3h
      labels:
        group: logsv1
        job: observatorium-observatorium-mst-api
        long: 4d
        severity: warning
        short: 6h
        slo: api-logs-query-availability-slo
  - interval: 30s
    name: api-logs-query-availability-slo-generic
    rules:
    - expr: "0.95"
      labels:
        slo: api-logs-query-availability-slo
      record: pyrra_objective
    - expr: 2419200
      labels:
        slo: api-logs-query-availability-slo
      record: pyrra_window
    - expr: 1 - sum(http_requests:increase4w{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}
        or vector(0)) / sum(http_requests:increase4w{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-query-availability-slo
      record: pyrra_availability
    - expr: sum(http_requests_total{code!~"^4..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-query-availability-slo
      record: pyrra_requests_total
    - expr: sum(http_requests_total{code=~"^5..$",group="logsv1",handler=~"query|label|labels|label_values",job="observatorium-observatorium-mst-api"}
        or vector(0))
      labels:
        slo: api-logs-query-availability-slo
      record: pyrra_errors_total
  - interval: 2m30s
    name: api-logs-query-range-availability-slo-increase
    rules:
    - expr: sum by(code) (increase(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[4w]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:increase4w
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query_range handler is burning too much error budget to
          guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryRangeAvailabilityErrorBudgetBurning
      expr: absent(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"})
        == 1
      for: 2m
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        severity: critical
        slo: api-logs-query-range-availability-slo
  - interval: 30s
    name: api-logs-query-range-availability-slo
    rules:
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[5m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[5m]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate5m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[30m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[30m]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate30m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[1h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[1h]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate1h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[2h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[2h]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate2h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[6h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[6h]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate6h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[1d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[1d]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate1d
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[4d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}[4d]))
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        slo: api-logs-query-range-availability-slo
      record: http_requests:burnrate4d
    - alert: APILogsQueryRangeAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query_range handler is burning too much error budget to
          guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryRangeAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate5m{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (14 * (1-0.95)) and http_requests:burnrate1h{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (14 * (1-0.95))
      for: 2m
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        long: 1h
        severity: critical
        short: 5m
        slo: api-logs-query-range-availability-slo
    - alert: APILogsQueryRangeAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query_range handler is burning too much error budget to
          guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryRangeAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate30m{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (7 * (1-0.95)) and http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (7 * (1-0.95))
      for: 15m
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        long: 6h
        severity: critical
        short: 30m
        slo: api-logs-query-range-availability-slo
    - alert: APILogsQueryRangeAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query_range handler is burning too much error budget to
          guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryRangeAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate2h{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (2 * (1-0.95)) and http_requests:burnrate1d{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (2 * (1-0.95))
      for: 1h
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        long: 1d
        severity: warning
        short: 2h
        slo: api-logs-query-range-availability-slo
    - alert: APILogsQueryRangeAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /query_range handler is burning too much error budget to
          guarantee availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsQueryRangeAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (1 * (1-0.95)) and http_requests:burnrate4d{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api",slo="api-logs-query-range-availability-slo"}
        > (1 * (1-0.95))
      for: 3h
      labels:
        group: logsv1
        handler: query_range
        job: observatorium-observatorium-mst-api
        long: 4d
        severity: warning
        short: 6h
        slo: api-logs-query-range-availability-slo
  - interval: 30s
    name: api-logs-query-range-availability-slo-generic
    rules:
    - expr: "0.95"
      labels:
        slo: api-logs-query-range-availability-slo
      record: pyrra_objective
    - expr: 2419200
      labels:
        slo: api-logs-query-range-availability-slo
      record: pyrra_window
    - expr: 1 - sum(http_requests:increase4w{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}
        or vector(0)) / sum(http_requests:increase4w{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-query-range-availability-slo
      record: pyrra_availability
    - expr: sum(http_requests_total{code!~"^4..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-query-range-availability-slo
      record: pyrra_requests_total
    - expr: sum(http_requests_total{code=~"^5..$",group="logsv1",handler="query_range",job="observatorium-observatorium-mst-api"}
        or vector(0))
      labels:
        slo: api-logs-query-range-availability-slo
      record: pyrra_errors_total
  - interval: 2m30s
    name: api-logs-tail-availability-slo-increase
    rules:
    - expr: sum by(code) (increase(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[4w]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:increase4w
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /tail is burning too much error budget to guarantee availability
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsTailAvailabilityErrorBudgetBurning
      expr: absent(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"})
        == 1
      for: 2m
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        severity: critical
        slo: api-logs-tail-availability-slo
  - interval: 30s
    name: api-logs-tail-availability-slo
    rules:
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[5m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[5m]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate5m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[30m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[30m]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate30m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[1h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[1h]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate1h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[2h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[2h]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate2h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[6h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[6h]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate6h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[1d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[1d]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate1d
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[4d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}[4d]))
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-tail-availability-slo
      record: http_requests:burnrate4d
    - alert: APILogsTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /tail is burning too much error budget to guarantee availability
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate5m{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (14 * (1-0.95)) and http_requests:burnrate1h{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (14 * (1-0.95))
      for: 2m
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        long: 1h
        severity: critical
        short: 5m
        slo: api-logs-tail-availability-slo
    - alert: APILogsTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /tail is burning too much error budget to guarantee availability
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate30m{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (7 * (1-0.95)) and http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (7 * (1-0.95))
      for: 15m
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        long: 6h
        severity: critical
        short: 30m
        slo: api-logs-tail-availability-slo
    - alert: APILogsTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /tail is burning too much error budget to guarantee availability
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate2h{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (2 * (1-0.95)) and http_requests:burnrate1d{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (2 * (1-0.95))
      for: 1h
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        long: 1d
        severity: warning
        short: 2h
        slo: api-logs-tail-availability-slo
    - alert: APILogsTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /tail is burning too much error budget to guarantee availability
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (1 * (1-0.95)) and http_requests:burnrate4d{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api",slo="api-logs-tail-availability-slo"}
        > (1 * (1-0.95))
      for: 3h
      labels:
        group: logsv1
        handler: tail
        job: observatorium-observatorium-mst-api
        long: 4d
        severity: warning
        short: 6h
        slo: api-logs-tail-availability-slo
  - interval: 30s
    name: api-logs-tail-availability-slo-generic
    rules:
    - expr: "0.95"
      labels:
        slo: api-logs-tail-availability-slo
      record: pyrra_objective
    - expr: 2419200
      labels:
        slo: api-logs-tail-availability-slo
      record: pyrra_window
    - expr: 1 - sum(http_requests:increase4w{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}
        or vector(0)) / sum(http_requests:increase4w{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-tail-availability-slo
      record: pyrra_availability
    - expr: sum(http_requests_total{code!~"^4..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-tail-availability-slo
      record: pyrra_requests_total
    - expr: sum(http_requests_total{code=~"^5..$",group="logsv1",handler="tail",job="observatorium-observatorium-mst-api"}
        or vector(0))
      labels:
        slo: api-logs-tail-availability-slo
      record: pyrra_errors_total
  - interval: 2m30s
    name: api-logs-prom-tail-availability-slo-increase
    rules:
    - expr: sum by(code) (increase(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[4w]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:increase4w
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /prom_tail is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPromTailAvailabilityErrorBudgetBurning
      expr: absent(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"})
        == 1
      for: 2m
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        severity: critical
        slo: api-logs-prom-tail-availability-slo
  - interval: 30s
    name: api-logs-prom-tail-availability-slo
    rules:
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[5m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[5m]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate5m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[30m]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[30m]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate30m
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[1h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[1h]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate1h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[2h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[2h]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate2h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[6h]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[6h]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate6h
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[1d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[1d]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate1d
    - expr: sum by(code) (rate(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[4d]))
        / sum by(code) (rate(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}[4d]))
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        slo: api-logs-prom-tail-availability-slo
      record: http_requests:burnrate4d
    - alert: APILogsPromTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /prom_tail is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPromTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate5m{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (14 * (1-0.95)) and http_requests:burnrate1h{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (14 * (1-0.95))
      for: 2m
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        long: 1h
        severity: critical
        short: 5m
        slo: api-logs-prom-tail-availability-slo
    - alert: APILogsPromTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /prom_tail is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPromTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate30m{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (7 * (1-0.95)) and http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (7 * (1-0.95))
      for: 15m
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        long: 6h
        severity: critical
        short: 30m
        slo: api-logs-prom-tail-availability-slo
    - alert: APILogsPromTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /prom_tail is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPromTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate2h{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (2 * (1-0.95)) and http_requests:burnrate1d{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (2 * (1-0.95))
      for: 1h
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        long: 1d
        severity: warning
        short: 2h
        slo: api-logs-prom-tail-availability-slo
    - alert: APILogsPromTailAvailabilityErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API logs /prom_tail is burning too much error budget to guarantee
          availability SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPromTailAvailabilityErrorBudgetBurning
      expr: http_requests:burnrate6h{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (1 * (1-0.95)) and http_requests:burnrate4d{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api",slo="api-logs-prom-tail-availability-slo"}
        > (1 * (1-0.95))
      for: 3h
      labels:
        group: logsv1
        handler: prom_tail
        job: observatorium-observatorium-mst-api
        long: 4d
        severity: warning
        short: 6h
        slo: api-logs-prom-tail-availability-slo
  - interval: 30s
    name: api-logs-prom-tail-availability-slo-generic
    rules:
    - expr: "0.95"
      labels:
        slo: api-logs-prom-tail-availability-slo
      record: pyrra_objective
    - expr: 2419200
      labels:
        slo: api-logs-prom-tail-availability-slo
      record: pyrra_window
    - expr: 1 - sum(http_requests:increase4w{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}
        or vector(0)) / sum(http_requests:increase4w{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-prom-tail-availability-slo
      record: pyrra_availability
    - expr: sum(http_requests_total{code!~"^4..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-prom-tail-availability-slo
      record: pyrra_requests_total
    - expr: sum(http_requests_total{code=~"^5..$",group="logsv1",handler="prom_tail",job="observatorium-observatorium-mst-api"}
        or vector(0))
      labels:
        slo: api-logs-prom-tail-availability-slo
      record: pyrra_errors_total
  - interval: 2m30s
    name: api-logs-write-latency-slo-increase
    rules:
    - expr: sum by(code) (increase(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[4w]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:increase4w
    - expr: sum by(code) (increase(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[4w]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        le: "5"
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:increase4w
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API /push handler is burning too much error budget to guarantee latency
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushLatencyErrorBudgetBurning
      expr: absent(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"})
        == 1
      for: 2m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        severity: critical
        slo: api-logs-write-latency-slo
    - alert: SLOMetricAbsent
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API /push handler is burning too much error budget to guarantee latency
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushLatencyErrorBudgetBurning
      expr: absent(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"})
        == 1
      for: 2m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        le: "5"
        severity: critical
        slo: api-logs-write-latency-slo
  - interval: 30s
    name: api-logs-write-latency-slo
    rules:
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[5m]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[5m])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[5m]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate5m
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[30m]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[30m])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[30m]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate30m
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1h]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[1h])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1h]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate1h
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[2h]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[2h])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[2h]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate2h
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[6h]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[6h])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[6h]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate6h
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1d]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[1d])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[1d]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate1d
    - expr: (sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[4d]))
        - sum(rate(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"}[4d])))
        / sum(rate(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"}[4d]))
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        slo: api-logs-write-latency-slo
      record: http_request_duration_seconds:burnrate4d
    - alert: APILogsPushLatencyErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API /push handler is burning too much error budget to guarantee latency
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushLatencyErrorBudgetBurning
      expr: http_request_duration_seconds:burnrate5m{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (14 * (1-0.9)) and http_request_duration_seconds:burnrate1h{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (14 * (1-0.9))
      for: 2m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 1h
        severity: critical
        short: 5m
        slo: api-logs-write-latency-slo
    - alert: APILogsPushLatencyErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API /push handler is burning too much error budget to guarantee latency
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushLatencyErrorBudgetBurning
      expr: http_request_duration_seconds:burnrate30m{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (7 * (1-0.9)) and http_request_duration_seconds:burnrate6h{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (7 * (1-0.9))
      for: 15m
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 6h
        severity: critical
        short: 30m
        slo: api-logs-write-latency-slo
    - alert: APILogsPushLatencyErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API /push handler is burning too much error budget to guarantee latency
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushLatencyErrorBudgetBurning
      expr: http_request_duration_seconds:burnrate2h{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (2 * (1-0.9)) and http_request_duration_seconds:burnrate1d{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (2 * (1-0.9))
      for: 1h
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 1d
        severity: warning
        short: 2h
        slo: api-logs-write-latency-slo
    - alert: APILogsPushLatencyErrorBudgetBurning
      annotations:
        dashboard: https://grafana.app-sre.devshift.net/d/283e7002d85c08126681241df2fdb22b/mst-production-slos?orgId=1&refresh=10s&var-datasource=telemeter-prod-01-prometheus&var-namespace={{$labels.namespace}}&var-job=All&var-pod=All&var-interval=5m
        message: API /push handler is burning too much error budget to guarantee latency
          SLOs.
        runbook: https://github.com/rhobs/configuration/blob/main/docs/sop/observatorium.md#APILogsPushLatencyErrorBudgetBurning
      expr: http_request_duration_seconds:burnrate6h{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (1 * (1-0.9)) and http_request_duration_seconds:burnrate4d{group="logsv1",handler="push",job="observatorium-observatorium-mst-api",slo="api-logs-write-latency-slo"}
        > (1 * (1-0.9))
      for: 3h
      labels:
        group: logsv1
        handler: push
        job: observatorium-observatorium-mst-api
        long: 4d
        severity: warning
        short: 6h
        slo: api-logs-write-latency-slo
  - interval: 30s
    name: api-logs-write-latency-slo-generic
    rules:
    - expr: "0.9"
      labels:
        slo: api-logs-write-latency-slo
      record: pyrra_objective
    - expr: 2419200
      labels:
        slo: api-logs-write-latency-slo
      record: pyrra_window
    - expr: sum(http_request_duration_seconds:increase4w{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5",slo="api-logs-write-latency-slo"}
        or vector(0)) / sum(http_request_duration_seconds:increase4w{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="",slo="api-logs-write-latency-slo"})
      labels:
        slo: api-logs-write-latency-slo
      record: pyrra_availability
    - expr: sum(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"})
      labels:
        slo: api-logs-write-latency-slo
      record: pyrra_requests_total
    - expr: sum(http_request_duration_seconds_count{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api"})
        - sum(http_request_duration_seconds_bucket{code=~"^2..$",group="logsv1",handler="push",job="observatorium-observatorium-mst-api",le="5"})
      labels:
        slo: api-logs-write-latency-slo
      record: pyrra_errors_total
